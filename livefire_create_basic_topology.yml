---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - livefire_answerfile.yml
  tasks:
    - name: Check manager status
      nsxt_manager_status:
          hostname: "{{hostname}}"
          username: "{{username}}"
          password: "{{password}}"
          validate_certs: False
          wait_time: 50

    - name: Deploy compute manager
      nsxt_fabric_compute_managers:
          hostname: "{{hostname}}"
          username: "{{username}}"
          password: "{{password}}"
          validate_certs: False
          display_name: "vCenter"
          server: "192.168.110.22"
          origin_type: vCenter
          credential:
            credential_type: UsernamePasswordLoginCredential
            username: "administrator@vsphere.local"
            password: "VMware1!"
            thumbprint: "DA:86:AF:44:45:AB:B1:EB:50:E1:C8:84:5B:DF:DB:D1:35:76:FF:AF:B5:39:AC:35:F8:B3:3C:8C:E1:1B:A3:8B"
          state: present
      register: compute_manager

    - name: Add Edge VM
      nsxt_fabric_nodes:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: "EdgeNode"
        display_name: "EdgeNode1"
        ip_addresses:
          - 192.168.110.12
        deployment_config:
          form_factor: "SMALL"
          node_user_settings:
            cli_password: "VMware1!"
            root_password: "VMware1!"
          vm_deployment_config:
            placement_type: VsphereDeploymentConfig
            vc_id: "{{compute_manager.id}}"
            data_network_ids:
            - dvportgroup-263
            - dvportgroup-263
            - dvportgroup-263
            management_network_id: "dvportgroup-263"
            hostname: "EdgeVM1"
            compute_id: "domain-c26"
            storage_id: "datastore-41"
            default_gateway_addresses:
            - 192.168.110.1
            management_port_subnets:
            - ip_addresses:
              - 192.168.110.12
              prefix_length: "24"
        state: present

    - name: Add fabric node
      nsxt_fabric_nodes:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: "HostNode"
        display_name: "{{item.display_name}}"
        ip_addresses: "{{item.ip_addresses}}"
        os_type: "{{item.os_type}}"
        os_version: "{{item.os_version}}"
        host_credential:
            username: "{{item.host_username}}"
            password: "{{item.host_password}}"
            thumbprint: "{{item.host_thumbprint}}"
        state: "present"
      with_items:
        - "{{fabric_host_nodes}}"

    - name: Create ip pool
      nsxt_ip_pools:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{item.display_name}}"
        subnets: "{{item.subnets}}"
        state: present
      with_items:
        - "{{ip_pools}}"

    - name: Create transport zone
      nsxt_transport_zones:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: "TransportZone"
        display_name: "{{item.display_name}}"
        description: "NSX configured Test Transport Zone"
        transport_type: "{{item.transport_type}}"
        host_switch_name: "{{item.host_switch_name}}"
        state: "present"
      with_items:
        - "{{transportzones}}"

    - name: Create uplink profile
      nsxt_uplink_profiles:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: UplinkHostSwitchProfile
        display_name: "{{item.display_name}}"
        mtu: 1700
        teaming: "{{item.teaming}}"
        transport_vlan: "{{item.transport_vlan}}"
        state: "present"
      with_items:
        - "{{uplink_profiles}}"

    - name: Create transport node
      nsxt_transport_nodes:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: TransportNode
        display_name: "{{item.display_name}}"
        description: NSX configured Test Transport Node
        host_switch_spec:
          resource_type: StandardHostSwitchSpec
          host_switches: "{{item.host_switches}}"
        transport_zone_endpoints: "{{item.transport_zone_endpoints}}"
        fabric_node_name: "{{item.fabric_node_name}}"
        state: present
      with_items:
        - "{{transport_nodes}}"

    - name: Create logical switch
      nsxt_logical_switches:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "test_lswitch"
        replication_mode: SOURCE
        admin_state: UP
        transport_zone_name: "TZ1"
        state: "present"

    - name: Create uplink VLAN
      nsxt_logical_switches:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "uplink_VLAN"
        replication_mode: SOURCE
        admin_state: UP
        transport_zone_name: "TZ2"
        vlan: 0
        state: "present"

    - name: Collect Uplink Profiles Information
      nsxt_uplink_profiles_facts:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
      check_mode: yes

    - name: List cluster profiles
      nsxt_cluster_profiles_facts:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
      check_mode: yes
      register: cluster_profiles

    - name: Add edge cluster
      nsxt_edge_clusters:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: edge-cluster-1
        cluster_profile_bindings:
        - profile_id: '{{ cluster_profiles["results"][1]["id"] }}'
          resource_type: EdgeHighAvailabilityProfile
        members:
        - transport_node_name: "Edge01"
        state: present

    - name: Create T0 logical router
      nsxt_logical_routers:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "tier-0"
        edge_cluster_name: edge-cluster-1
        router_type: TIER0
        high_availability_mode: ACTIVE_STANDBY
        state: "present"

    - name: Create logical port on VLAN LS to connect T0 router to uplink VLAN
      nsxt_logical_ports:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "T0_uplink"
        logical_switch_name: "uplink_VLAN"
        admin_state: UP
        state: "present"

    - name: List logical ports
      nsxt_logical_ports_facts:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
      check_mode: yes
      register: logical_ports_json
      #    - name: print variable
      #shell: echo {{ logical_ports_json["results"][0]["id"] }} > tmp

    - name: Collect information about logical routers
      nsxt_logical_routers_facts:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
      check_mode: yes
      register: logical_routers

    - name: Create logical router porton T0 router to interconnect uplink VLAN
      nsxt_logical_router_ports:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: uplink
        resource_type: LogicalRouterUpLinkPort
        logical_router_id: "{{ logical_routers['results'][0]['id'] }}"
        edge_cluster_member_index: [0]
        linked_logical_switch_port_id:
          target_type: LogicalPort
          target_id:  "{{ logical_ports_json['results'][0]['id'] }}"
        subnets:
        - ip_addresses:
          - 192.168.100.100
          prefix_length: 24
        state: "present"

