---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - livefire_answerfile.yml
  tasks:
    - name: Collect T0 Router-id
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: result


    - name: Read BGP configuration on T0 router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{result.json.results[0].id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: result2


    - name: Enable BGP on T0 router
      uri:
        method: PUT
        url: https://{{hostname}}/api/v1/logical-routers/{{result.json.results[0].id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: BgpConfig
          description: "Uplink to external"
          display_name: "Uplink to external"
          as_num: 65001
          graceful_restart: false
          enabled: true
          ecmp: true
          _revision: "{{result2.json._revision}}"
        body_format: json
        force_basic_auth: yes
        validate_certs: no

    - name: Read BGP configuration on T0 router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{result.json.results[0].id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: result3


    - name: Configure BGP peering to CSR-01a
      uri:
        method: POST
        url: https://{{hostname}}/api/v1/logical-routers/{{result.json.results[0].id}}/routing/bgp/neighbors
        user: "admin"
        password: "VMware1!"
        body:
          display_name: neighbor1
          neighbor_address: "192.168.254.9"
          remote_as_num: 65002
          address_families: 
          - 
            type: IPV4_UNICAST
            enabled: true
        body_format: json
        force_basic_auth: yes
        validate_certs: no

    - name: Configure BGP peering to CSR-02a
      uri:
        method: POST
        url: https://{{hostname}}/api/v1/logical-routers/{{result.json.results[0].id}}/routing/bgp/neighbors
        user: "admin"
        password: "VMware1!"
        body:
          display_name: neighbor2
          neighbor_address: "192.168.254.17"
          remote_as_num: 65002
          address_families:
          -
            type: IPV4_UNICAST
            enabled: true
        body_format: json
        force_basic_auth: yes
        validate_certs: no


    - name: "Create Overlay Logical Switches for 4 Tiers Application"
      nsxt_logical_switches:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{item.display_name}}"
        replication_mode: SOURCE
        admin_state: UP
        transport_zone_name: "{{overlay_transportzones[0].display_name}}"
        state: "present"
      with_items:
        - "{{application_overlays}}"


    - name: Create T1 logical router
      nsxt_logical_routers:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "t1-tenant1"
        edge_cluster_name: edge-cluster-1-SiteA
        router_type: TIER1
        high_availability_mode: ACTIVE_STANDBY
        state: "present"
      register: T1


    - name: Create logical port on Overlay LS to connect the T1 router
      nsxt_logical_ports:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{item.display_name}}_lsp"
        logical_switch_name: "{{item.display_name}}"
        admin_state: UP
        state: "present"
      with_items:
        - "{{application_overlays}}"
      register: overlay_lsp


    - name: Create logical router port for web LS
      uri:
        method: POST
        status_code: 201
        url: https://{{hostname}}/api/v1/logical-router-ports
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: LogicalRouterDownLinkPort
          logical_router_id: "{{T1.id}}"
          linked_logical_switch_port_id:
           target_type: LogicalPort
           target_id: "{{overlay_lsp.results[0].id}}"
          subnets:
           - ip_addresses:
             - "172.16.10.1"
             prefix_length: 24
        force_basic_auth: yes
        validate_certs: no
        body_format: json


    - name: Create logical router port for app LS
      uri:
        method: POST
        status_code: 201
        url: https://{{hostname}}/api/v1/logical-router-ports
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: LogicalRouterDownLinkPort
          logical_router_id: "{{T1.id}}"
          linked_logical_switch_port_id:
           target_type: LogicalPort
           target_id: "{{overlay_lsp.results[1].id}}"
          subnets:
           - ip_addresses:
             - "172.16.20.1"
             prefix_length: 24
        force_basic_auth: yes
        validate_certs: no
        body_format: json


    - name: Create logical router port for db LS
      uri:
        method: POST
        status_code: 201
        url: https://{{hostname}}/api/v1/logical-router-ports
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: LogicalRouterDownLinkPort
          logical_router_id: "{{T1.id}}"
          linked_logical_switch_port_id:
           target_type: LogicalPort
           target_id: "{{overlay_lsp.results[2].id}}"
          subnets:
           - ip_addresses:
             - "172.16.30.1"
             prefix_length: 24
        force_basic_auth: yes
        validate_certs: no
        body_format: json

